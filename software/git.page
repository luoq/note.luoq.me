# Simple commands
*   rewrite a commit message

    ~~~ {.bash}
git commit --amend
    ~~~

* show the working tree status

    ~~~ {.bash}
git status
    ~~~

* add tag

    ~~~ {.bash}
git tag -a v1.0
    ~~~

* checkout a dir

    ~~~ {.bash}
git checkout old-kernel -- ./
    ~~~

    **Note the last /**^[http://gitready.com/intermediate/2009/03/18/restoring-a-directory-from-history.html]

# git svn

* Checking out a Subversion repository:

    ~~~ {.bash}
git svn clone http://lq/svn
    ~~~

* Before committing back to Subversion, you will want to update to apply any new changes in the repository to your local Git repo.

    ~~~ {.bash}
git svn rebase
    ~~~

* Commit back to svn

    ~~~ {.bash}
git svn dcommit
    ~~~

* switch to a different svn url
    1. Edit the svn-remote url URL in .git/config to point to the new domain name
    1. Run git svn fetch â€“ This needs to fetch at least one new revision from svn!
    1. Change svn-remote url back to the original url
    1. Run git svn rebase -l to do a local rebase (with the changes that came in with the last fetch operation)
    1. Change svn-remote url back to the new url
    1. Run git svn rebase should now work again! 

# remote
* create remote brach and add track upstream (tracking) reference ^[http://stackoverflow.com/questions/1519006/git-how-to-create-remote-branch]

    ~~~ {.bash}
git push -u <remote-name> <remote-branch-name>
git push -u <remote-name> <local-branch-name>:<remote-branch-name>
    ~~~

* delete a remote branch ^[http://yuji.wordpress.com/2010/06/11/git-delete-remote-branch/]

    ~~~ {.bash}
git push <remote> :<remote_branch>
    ~~~